

- Parse Config File
- Make sockets in Network based on total ports
- Distribute port fd's to servers who need it
- Poll()
- If socket fd: Accept Connection based on fd
- If client fd: Extract all possible servers based on the fd
- Send to Exchange -> all possible servers (std::vector<Servers>), current_fd(int), requestStr(std::string)
- Exchange:
	- Parse requestStr
	- Based on requestData matchServer() -> returns Server(Server)
	- Based on requestData and server matchLocation() -> returns locationName(std::string)
	- Response(requestData(mp<std::string, std::string>), _server(Server), _location(Location))
	
TODO:
- (Xander) Make recv first parse only header then parse body based on content length
- (Bence) Chaining together the correct path based on location name+root+rest_of_url
- (Max/Xander) If read/write fails close connection (still need to implement on write)
- (Xander) Limit the upload size to 100mb? (suggestions are welcome)
- Set default file for a directory
- Add default file to parser
- HTML landing page

TOCHECKLAST:
- Check all system calls, handle return of error (-1) anything in 
- Check for forbidden functions (ex. std::stoi)
- Check relinking of Makefile
- Check for leaks
- Check all respond codes
- Clean up the repo

DONE:
- (DONE)(XANDER) Method like HEAD should return (501 Not implemented)
- (DONE)(Max) Location block return (redirection)
- (DONE)(Bence) Invalid location if /php/
- (DONE)(Bence) Denied permisson of the script 
- (DONE)(Bence) Check allow_methods for cgi
- (Done)(Max) Rewrite Poll struct to use std::vector<pollfd*> for readability and to remove malloc (std::vector.data() for beginning of struct) 
- (Done)(Max) make std::map<int, std::vector<Server>> to easily send Exchange matching filedescriptors
- (Done)(Max) rewrite acceptConnection to be based on fd instead of Server, then add it to the std::map<int, std::vector<Server&>>

Something goes wrong when you try to GET or DELETE a file with a spacebar in between.
Example: "GET /space\ test.html HTTP/1.1"


