// location /there has to be a / or so after location, same line as well
//there can be no modifiers between

SERVER DIRECTIVE:
	MANDATORY: listen (>= 1)
	MANDATORY: location (>= 1)
	OPTIONAL: server_name (>= 1) //mandatory
	OPTIONAL: error_page (multiple codes are accepted, one URI)
	OPTIONAL: client_body_size (one number is accepted)

	LOCATION DIRECTIVE: //opening/closing []
		OPTIONAL: root (Usually, you donâ€™t have to set the root in the new location block since it matches the root in the server block)
		OPTIONAL: index
		OPTIONAL: allowed_methods 
		OPTIONAL: autoindex
		OPTIONAL: cgi
		OPTIONAL: upload_store


ACCEPTEX SYNTAX:
	- All whitespaces have to be POSIX standard eg: " \t\r\n\v\f "
	- If an input is not part of a directive, program will terminate
	- Usage of * or any modifier/regex expression will be treated as incorrect input, thus the program will terminate
	- If a line will have no terminating ; character, the input will be treated incorrect, thus...
	- If anything other than directives or expected braces are present, the input will be treated incorrect, thus...

	//block errors to check for
	/*

	1, closing braces immediately eg: location /python []
		fails: location /python []
	2, closing braces after server eg: -> FIXED
	 	server
		{
		}

	3, already existing port server_name etc...?

	4, server server (more words after server) -> FIXED

	5, what happens if there is no server specified at all
	6, location location  -> FIXED
	7, check if we already have some value assigned to the directives, don't allow overwriting?
    8. location
       {
       }

       Is valid and does not create a "location"

	^
	|

	You can add your own stuff.


	*/